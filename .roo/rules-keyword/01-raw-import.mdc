---
description: "ラッコキーワードの生データ（TXT / CSV 貼り付け）を `keywords.md` 用のクリーンなリストに整形するルール"
globs: 
alwaysApply: false
---

# Keyword Raw‑Import Rule （01）

## 🎯 目的
ラッコキーワード（または同等ツール）からエクスポートした生データを解析し、重複排除・カテゴリ分割・ソートを行ったうえで `content/keywords/<slug>/keywords.md` に出力するベースリストを作成します。大規模データの場合は03-batch-processingルールと連携して処理します。

## 🗂️ 入力フォーマット
| 区分 | 形式 | 例 | 注記 |
|------|------|----|------|
| TXT | タブ区切り | `keyword\t1000` | ボリューム数値は任意 |
| CSV | 1 行目ヘッダ含む | `"キーワード","検索数"` | UTF‑8 推奨 |
| プレーン貼付 | 改行区切り | `keywordA` | ボリューム不明の場合 0 扱い |
| バッチファイル | 300行以内 | `batch_1.txt` | バッチ処理用 |

## 🔄 変換手順
1. **読み込み & 正規化**  
   - 文字コードを UTF‑8 に強制変換  
   - タブ / カンマ / 全角スペースを半角スペースに正規化
   - バッチ処理の場合は一時ファイルとして保存
2. **重複排除**  
   - 大文字小文字・全半角を無視してユニーク化
3. **ボリューム付与**  
   - 検索数列が存在しない場合は 0 を割当て
4. **カテゴリ選定**  
   - 上位検索量キーワードを **Primary** として 1 つ選択  
   - 以降検索量降順の上位 20 件を **Secondary**  
   - 残りを **Support** として 30 件以内にカンマ区切り
5. **出力**  
   - 通常処理: `keywords.md` に直接出力
   - バッチ処理: `temp/batch_{number}_keywords.md` に一時出力

```md
Primary: {{Primary Keyword}}
- {{Secondary Keyword 1}}
- {{Secondary Keyword 2}}
...
Support: {{support1}}, {{support2}}, ...
```

## ✅ Validation Checklist
- [ ] Primary が 1 行のみで `Primary:` プレフィックスを持つ
- [ ] Secondary 行が 3 行以上存在し、全てハイフン始まり
- [ ] Support 行が 1 行のみで `Support:` プレフィックスを持つ
- [ ] バッチサイズ ≤ 300行
- [ ] BOM 無し UTF‑8 で保存

## 🔄 バッチ処理モード
- 入力が300行を超える場合、自動的にバッチ処理モードに移行
- 03-batch-processingルールと連携して処理
- 一時ファイルは`temp`ディレクトリに保存
- バッチ処理完了後、結果を統合して最終出力

---

> **Note:** 生成後、自動で `persona` モードに切り替えるフックを設置する場合はワークフロー定義（例: `afterWrite` スクリプト）を参照してください。

- [ ] 合計キーワード数 ≤ 50
- [ ] BOM 無し UTF‑8 で保存

---

> **Note:** 生成後、自動で `persona` モードに切り替えるフックを設置する場合はワークフロー定義（例: `afterWrite` スクリプト）を参照してください。
